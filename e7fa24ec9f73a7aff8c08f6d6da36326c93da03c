{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "442b4c26_365f130b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1793992
      },
      "writtenOn": "2023-02-09T10:13:30Z",
      "side": 1,
      "message": "The only BC class referenced in aosp/2411668 is Base64. Do you use anything else from it?",
      "revId": "e7fa24ec9f73a7aff8c08f6d6da36326c93da03c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9cf2188c_6847578d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1857230
      },
      "writtenOn": "2023-02-09T14:52:00Z",
      "side": 1,
      "message": "Yes, the class referenced relies on ParsedAttestationRecord and we need to have BC present in deviceinfo for the code to run. PAR uses many BC classes.\n\nhttps://source.corp.google.com/android-internal/external/android-key-attestation/server/src/main/java/com/google/android/attestation/ParsedAttestationRecord.java;l\u003d99?q\u003dcreateparsed\u0026sq\u003dpackage:%5Eandroid-internal$",
      "parentUuid": "442b4c26_365f130b",
      "revId": "e7fa24ec9f73a7aff8c08f6d6da36326c93da03c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "48861fab_b5abf647",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1793992
      },
      "writtenOn": "2023-02-09T14:57:27Z",
      "side": 1,
      "message": "Doesn\u0027t `android-key-attestation` pulls that automatically? I think I miss something, but is it visibility really needed for transitive dependencies?",
      "parentUuid": "9cf2188c_6847578d",
      "revId": "e7fa24ec9f73a7aff8c08f6d6da36326c93da03c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dc89c532_8d172d2d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1857230
      },
      "writtenOn": "2023-02-09T15:04:16Z",
      "side": 1,
      "message": "I would have thought so too but it didn\u0027t bring it in. If I don\u0027t explicitely pull it in the class will fail at runtime saying it cannot resolve the BC classes.",
      "parentUuid": "48861fab_b5abf647",
      "revId": "e7fa24ec9f73a7aff8c08f6d6da36326c93da03c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fa17c165_60531d33",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1793992
      },
      "writtenOn": "2023-02-09T15:36:01Z",
      "side": 1,
      "message": "I\u0027ve applied aosp/2411668 locally (w/o this CL), removed bouncycastle from deps, added visibility in `android-key-attestation` and replaced BC\u0027s Base64 with java.util.Base64.\n\nWith such setup `mmma cts/tools/cts-device-info/` finished fine. Or it is not what you want to achieve?",
      "parentUuid": "dc89c532_8d172d2d",
      "revId": "e7fa24ec9f73a7aff8c08f6d6da36326c93da03c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}